/*!
Provides support for parsing, and emitting, external representations of a `StateMachine`.

More detailed description, with

# Example

*/

use crate::definition::types::StateMachine;

// ------------------------------------------------------------------------------------------------
// Public Types
// ------------------------------------------------------------------------------------------------

pub trait Parse<E: PartialEq> {
    type Error;

    fn parse(&self, string: &str) -> Result<StateMachine<E>, Self::Error>;
}

pub trait Stringify<E: PartialEq> {
    type Error;

    fn stringify(&self, machine: &StateMachine<E>) -> Result<String, Self::Error>;
}

// ------------------------------------------------------------------------------------------------
// Public Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Implementations
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Types
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Modules
// ------------------------------------------------------------------------------------------------

pub mod graphviz;

pub mod plant_uml;

pub mod scxml;

pub mod uml;

pub mod xstate;
