/*!
One-line description.

More detailed description, with

# Example

*/

use crate::StateMachine;

// ------------------------------------------------------------------------------------------------
// Public Types
// ------------------------------------------------------------------------------------------------

pub trait Parse<E: Eq, D> {
    type Error;

    fn parse(string: &str) -> Result<StateMachine<E, D>, Self::Error>;
}

pub trait Stringify<E: Eq, D> {
    type Error;

    fn stringify(chart: StateMachine<E, D>) -> Result<String, Self::Error>;
}

// ------------------------------------------------------------------------------------------------
// Public Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Implementations
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Types
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Modules
// ------------------------------------------------------------------------------------------------

pub mod graphviz;

pub mod scxml;

pub mod uml;

pub mod xstate;
